#!/bin/env python3

import copy
import yaml  # type: ignore
import tomli_w  # type: ignore

yaml.SafeDumper.add_representer(
    type(None),
    lambda dumper, value: dumper.represent_scalar("tag:yaml.org,2002:null", ""),
)

from typing import Dict
from pathlib import Path

from src.generator.constants import (
    VELOCITY_CONFIG_TEMPLATE_NAME,
)

from src.generator.base_generator import BaseGenerator
from src.common.config.toml_config import TomlConfig
from src.common.config import load_toml_config


class VelocityConfigGen(BaseGenerator):
    """
    TODO: Refactor to get more DRY between VelocityConfigGen and DockerComposeGen
    """
    velocity_config_template: TomlConfig

    generated_velocity_config_name: str
    generated_velocity_config: dict = {}

    def __init__(self, env: str):

        super().__init__(env)

        self.generated_velocity_config_name = f"velocity-{self.env}.toml"
        self.generated_velocity_config_folder = (
            Path(__file__).parent.parent.parent / "gen"
        )  # G w o s s

        if not self.generated_velocity_config_folder.exists():
            self.generated_velocity_config_folder.mkdir()

        curr_dir = Path(__file__).parent
        self.velocity_config_template = load_toml_config(
            VELOCITY_CONFIG_TEMPLATE_NAME, curr_dir
        )

    def generate_velocity_config(self):

        # Copy baseline velocity config
        self.generated_velocity_config = self.velocity_config_template.as_dict()

        # Add servers and forced_hosts
        servers = {}
        forced_hosts = {}
        try_servers = []
        for world in self.env_config['world-groups'].enabled_groups:
            world_underscored = world.replace("-", "_")

            # Using the generated name (when no container_name is supplied) or config object name (eg, "mc_survival"), Velocity isn't able to
            #     resolve the supplied alias. For whatever reason, explicitly declared container_names do work, however.
            servers[world_underscored] = f"YC-{world}-{self.env}:25565"
            try_servers.append(world_underscored)

            if world == "lobby":
                forced_hosts["mc.yukkuricraft.net"] = [ world_underscored ]
            forced_hosts[f"{world}.yukkuricraft.net"] = [ world_underscored ]

        servers["try"] = try_servers
        self.generated_velocity_config["servers"] = servers
        self.generated_velocity_config["forced-hosts"] = forced_hosts

    def dump_generated_velocity_config(self):
        print(f"Generating new {self.generated_velocity_config_name}...")
        generated_velocity_config_path = (
            self.generated_velocity_config_folder / self.generated_velocity_config_name
        )
        with open(generated_velocity_config_path, "wb") as f:
            f.write(
                    "#\n# THIS FILE IS AUTOMATICALLY GENERATED.\n# CHANGES WILL BE OVERWRITTEN ON RESTART.\n#\n\n".encode("utf8")
            )

            tomli_w.dump(
                self.generated_velocity_config,
                f
            )
        print("Done.")

    def run(self):
        self.generate_velocity_config()
        self.dump_generated_velocity_config()
