services:
  # For yakumo-dash, run yakumo-dash-dev from yakumo-dash repo.
  yc-api:
    container_name: yc-api
    hostname: ${HOST_HOSTNAME}
    image: yukkuricraft/yc-docker-api
    restart: 'unless-stopped'
    depends_on:
      yc-api-mysql:
        condition: service_healthy
    environment:
      VIRTUAL_HOST: ${API_HOST}
      VIRTUAL_PORT: 5001
      LETSENCRYPT_HOST: ${API_HOST}
      HOST_YC_REPO_ROOT: ${YC_REPO_ROOT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/app
      - /var/lib/yukkuricraft/:/var/lib/yukkuricraft/
      - /etc/passwd:/etc/host-passwd
    networks:
      - yc-web-dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"

  yc-api-filebrowser:
    container_name: yc-api-filebrowser
    hostname: yc-api-filebrowser
    image: filebrowser/filebrowser
    restart: 'unless-stopped'
    user: '${UID}:${GID}'
    networks:
      - yc-web-dev
    environment:
      VIRTUAL_HOST: ${FILEBROWSER_HOST}
      VIRTUAL_PORT: ${FILEBROWSER_PORT}
      LETSENCRYPT_HOST: ${FILEBROWSER_HOST}
    volumes:
    - /var/lib/yukkuricraft/db/filebrowser.db:/database.db
    - /var/lib/yukkuricraft/env:/srv
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"

  yc-api-mysql:
    platform: linux/amd64
    container_name: yc-api-mysql
    image: mysql:5.7
    restart: 'unless-stopped'
    env_file:
      - ./secrets/api_db.env
    ports:
      - "3366:3306"
    volumes:
      - ${MC_FS_ROOT}/db/api:/var/lib/mysql
    networks:
      - yc-web-dev
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:3306
      interval: 10s
      timeout: 10s
      retries: 15
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"

  nginx-proxy:
    container_name: nginx-proxy
    image: yukkuricraft/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - yc-web-dev
    restart: 'unless-stopped'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"

  # Homelab setup currently has an independent nginx reverse proxy with SSL certs serving traffic to both prod and dev hosts.
  # Leaving this in incase development work is done outside these two hosts. To re-enable local SSL cert generation, should be
  # as simple as uncommenting the following block. You will also need to adjust the VIRTUAL_HOST values to a valid domain.
  # letsencrypt-nginx-proxy:
  #   container_name: letsencrypt-nginx-proxy
  #   image: nginxproxy/acme-companion
  #   environment:
  #     - DEFAULT_EMAIL=remilia@scarl.et
  #     - ACME_CA_URI=https://acme-v02.api.letsencrypt.org/directory
  #     - NGINX_PROXY_CONTAINER=nginx-proxy
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ${MC_FS_ROOT}/nginx/certs:/etc/nginx/certs:rw
  #     - ${MC_FS_ROOT}/nginx/html:/usr/share/nginx/html
  #     - ${MC_FS_ROOT}/nginx/vhost:/etc/nginx/vhost.d
  #     - ${MC_FS_ROOT}/nginx/acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy
  #   networks:
  #     - yc-web-dev

volumes:
  api-mysql-data:
  certs:
  html:
  vhost:
  acme:

networks:
  yc-web-dev:
